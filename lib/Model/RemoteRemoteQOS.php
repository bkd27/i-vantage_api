<?php
/**
 * RemoteRemoteQOS
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * iVantage API
 *
 * This is the iDirect iVantage API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * RemoteRemoteQOS Class Doc Comment
 *
 * @category    Class
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class RemoteRemoteQOS implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'Remote_RemoteQOS';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'nominal_modcod' => 'string',
        'max_modcod' => 'string',
        'ds_alloc_rel_to_cir' => 'bool',
        'us_alloc_rel_to_cir' => 'bool',
        'dsqos' => '\Swagger\Client\Model\RemoteRemoteQOSDSQOS',
        'ds_rate_shaping' => '\Swagger\Client\Model\RemoteRemoteQOSDSRateShaping',
        'ds_distributor' => '\Swagger\Client\Model\RemoteRemoteQOSDSDistributor',
        'usqos' => '\Swagger\Client\Model\RemoteRemoteQOSUSQOS',
        'us_rate_shaping' => '\Swagger\Client\Model\RemoteRemoteQOSDSRateShaping',
        'us_distributor' => '\Swagger\Client\Model\RemoteRemoteQOSDSDistributor',
        'us_adaptive' => '\Swagger\Client\Model\RemoteRemoteQOSUSAdaptive',
        'idle_dormant' => '\Swagger\Client\Model\RemoteRemoteQOSIdleDormant'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'nominal_modcod' => null,
        'max_modcod' => null,
        'ds_alloc_rel_to_cir' => null,
        'us_alloc_rel_to_cir' => null,
        'dsqos' => null,
        'ds_rate_shaping' => null,
        'ds_distributor' => null,
        'usqos' => null,
        'us_rate_shaping' => null,
        'us_distributor' => null,
        'us_adaptive' => null,
        'idle_dormant' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'nominal_modcod' => 'NominalMODCOD',
        'max_modcod' => 'MaxMODCOD',
        'ds_alloc_rel_to_cir' => 'DSAllocRelToCIR',
        'us_alloc_rel_to_cir' => 'USAllocRelToCIR',
        'dsqos' => 'DSQOS',
        'ds_rate_shaping' => 'DSRateShaping',
        'ds_distributor' => 'DSDistributor',
        'usqos' => 'USQOS',
        'us_rate_shaping' => 'USRateShaping',
        'us_distributor' => 'USDistributor',
        'us_adaptive' => 'USAdaptive',
        'idle_dormant' => 'IdleDormant'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'nominal_modcod' => 'setNominalModcod',
        'max_modcod' => 'setMaxModcod',
        'ds_alloc_rel_to_cir' => 'setDsAllocRelToCir',
        'us_alloc_rel_to_cir' => 'setUsAllocRelToCir',
        'dsqos' => 'setDsqos',
        'ds_rate_shaping' => 'setDsRateShaping',
        'ds_distributor' => 'setDsDistributor',
        'usqos' => 'setUsqos',
        'us_rate_shaping' => 'setUsRateShaping',
        'us_distributor' => 'setUsDistributor',
        'us_adaptive' => 'setUsAdaptive',
        'idle_dormant' => 'setIdleDormant'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'nominal_modcod' => 'getNominalModcod',
        'max_modcod' => 'getMaxModcod',
        'ds_alloc_rel_to_cir' => 'getDsAllocRelToCir',
        'us_alloc_rel_to_cir' => 'getUsAllocRelToCir',
        'dsqos' => 'getDsqos',
        'ds_rate_shaping' => 'getDsRateShaping',
        'ds_distributor' => 'getDsDistributor',
        'usqos' => 'getUsqos',
        'us_rate_shaping' => 'getUsRateShaping',
        'us_distributor' => 'getUsDistributor',
        'us_adaptive' => 'getUsAdaptive',
        'idle_dormant' => 'getIdleDormant'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['nominal_modcod'] = isset($data['nominal_modcod']) ? $data['nominal_modcod'] : null;
        $this->container['max_modcod'] = isset($data['max_modcod']) ? $data['max_modcod'] : null;
        $this->container['ds_alloc_rel_to_cir'] = isset($data['ds_alloc_rel_to_cir']) ? $data['ds_alloc_rel_to_cir'] : null;
        $this->container['us_alloc_rel_to_cir'] = isset($data['us_alloc_rel_to_cir']) ? $data['us_alloc_rel_to_cir'] : null;
        $this->container['dsqos'] = isset($data['dsqos']) ? $data['dsqos'] : null;
        $this->container['ds_rate_shaping'] = isset($data['ds_rate_shaping']) ? $data['ds_rate_shaping'] : null;
        $this->container['ds_distributor'] = isset($data['ds_distributor']) ? $data['ds_distributor'] : null;
        $this->container['usqos'] = isset($data['usqos']) ? $data['usqos'] : null;
        $this->container['us_rate_shaping'] = isset($data['us_rate_shaping']) ? $data['us_rate_shaping'] : null;
        $this->container['us_distributor'] = isset($data['us_distributor']) ? $data['us_distributor'] : null;
        $this->container['us_adaptive'] = isset($data['us_adaptive']) ? $data['us_adaptive'] : null;
        $this->container['idle_dormant'] = isset($data['idle_dormant']) ? $data['idle_dormant'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets nominal_modcod
     * @return string
     */
    public function getNominalModcod()
    {
        return $this->container['nominal_modcod'];
    }

    /**
     * Sets nominal_modcod
     * @param string $nominal_modcod
     * @return $this
     */
    public function setNominalModcod($nominal_modcod)
    {
        $this->container['nominal_modcod'] = $nominal_modcod;

        return $this;
    }

    /**
     * Gets max_modcod
     * @return string
     */
    public function getMaxModcod()
    {
        return $this->container['max_modcod'];
    }

    /**
     * Sets max_modcod
     * @param string $max_modcod
     * @return $this
     */
    public function setMaxModcod($max_modcod)
    {
        $this->container['max_modcod'] = $max_modcod;

        return $this;
    }

    /**
     * Gets ds_alloc_rel_to_cir
     * @return bool
     */
    public function getDsAllocRelToCir()
    {
        return $this->container['ds_alloc_rel_to_cir'];
    }

    /**
     * Sets ds_alloc_rel_to_cir
     * @param bool $ds_alloc_rel_to_cir
     * @return $this
     */
    public function setDsAllocRelToCir($ds_alloc_rel_to_cir)
    {
        $this->container['ds_alloc_rel_to_cir'] = $ds_alloc_rel_to_cir;

        return $this;
    }

    /**
     * Gets us_alloc_rel_to_cir
     * @return bool
     */
    public function getUsAllocRelToCir()
    {
        return $this->container['us_alloc_rel_to_cir'];
    }

    /**
     * Sets us_alloc_rel_to_cir
     * @param bool $us_alloc_rel_to_cir
     * @return $this
     */
    public function setUsAllocRelToCir($us_alloc_rel_to_cir)
    {
        $this->container['us_alloc_rel_to_cir'] = $us_alloc_rel_to_cir;

        return $this;
    }

    /**
     * Gets dsqos
     * @return \Swagger\Client\Model\RemoteRemoteQOSDSQOS
     */
    public function getDsqos()
    {
        return $this->container['dsqos'];
    }

    /**
     * Sets dsqos
     * @param \Swagger\Client\Model\RemoteRemoteQOSDSQOS $dsqos
     * @return $this
     */
    public function setDsqos($dsqos)
    {
        $this->container['dsqos'] = $dsqos;

        return $this;
    }

    /**
     * Gets ds_rate_shaping
     * @return \Swagger\Client\Model\RemoteRemoteQOSDSRateShaping
     */
    public function getDsRateShaping()
    {
        return $this->container['ds_rate_shaping'];
    }

    /**
     * Sets ds_rate_shaping
     * @param \Swagger\Client\Model\RemoteRemoteQOSDSRateShaping $ds_rate_shaping
     * @return $this
     */
    public function setDsRateShaping($ds_rate_shaping)
    {
        $this->container['ds_rate_shaping'] = $ds_rate_shaping;

        return $this;
    }

    /**
     * Gets ds_distributor
     * @return \Swagger\Client\Model\RemoteRemoteQOSDSDistributor
     */
    public function getDsDistributor()
    {
        return $this->container['ds_distributor'];
    }

    /**
     * Sets ds_distributor
     * @param \Swagger\Client\Model\RemoteRemoteQOSDSDistributor $ds_distributor
     * @return $this
     */
    public function setDsDistributor($ds_distributor)
    {
        $this->container['ds_distributor'] = $ds_distributor;

        return $this;
    }

    /**
     * Gets usqos
     * @return \Swagger\Client\Model\RemoteRemoteQOSUSQOS
     */
    public function getUsqos()
    {
        return $this->container['usqos'];
    }

    /**
     * Sets usqos
     * @param \Swagger\Client\Model\RemoteRemoteQOSUSQOS $usqos
     * @return $this
     */
    public function setUsqos($usqos)
    {
        $this->container['usqos'] = $usqos;

        return $this;
    }

    /**
     * Gets us_rate_shaping
     * @return \Swagger\Client\Model\RemoteRemoteQOSDSRateShaping
     */
    public function getUsRateShaping()
    {
        return $this->container['us_rate_shaping'];
    }

    /**
     * Sets us_rate_shaping
     * @param \Swagger\Client\Model\RemoteRemoteQOSDSRateShaping $us_rate_shaping
     * @return $this
     */
    public function setUsRateShaping($us_rate_shaping)
    {
        $this->container['us_rate_shaping'] = $us_rate_shaping;

        return $this;
    }

    /**
     * Gets us_distributor
     * @return \Swagger\Client\Model\RemoteRemoteQOSDSDistributor
     */
    public function getUsDistributor()
    {
        return $this->container['us_distributor'];
    }

    /**
     * Sets us_distributor
     * @param \Swagger\Client\Model\RemoteRemoteQOSDSDistributor $us_distributor
     * @return $this
     */
    public function setUsDistributor($us_distributor)
    {
        $this->container['us_distributor'] = $us_distributor;

        return $this;
    }

    /**
     * Gets us_adaptive
     * @return \Swagger\Client\Model\RemoteRemoteQOSUSAdaptive
     */
    public function getUsAdaptive()
    {
        return $this->container['us_adaptive'];
    }

    /**
     * Sets us_adaptive
     * @param \Swagger\Client\Model\RemoteRemoteQOSUSAdaptive $us_adaptive
     * @return $this
     */
    public function setUsAdaptive($us_adaptive)
    {
        $this->container['us_adaptive'] = $us_adaptive;

        return $this;
    }

    /**
     * Gets idle_dormant
     * @return \Swagger\Client\Model\RemoteRemoteQOSIdleDormant
     */
    public function getIdleDormant()
    {
        return $this->container['idle_dormant'];
    }

    /**
     * Sets idle_dormant
     * @param \Swagger\Client\Model\RemoteRemoteQOSIdleDormant $idle_dormant
     * @return $this
     */
    public function setIdleDormant($idle_dormant)
    {
        $this->container['idle_dormant'] = $idle_dormant;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


